// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}


model Post {
    id          Int      @id @default(autoincrement())
    caption     String   @db.VarChar(10000) @default("") 
    author      User     @relation("Author", fields: [authorId], references: [uuid])
    authorId    String
    location    String   @default("")
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    photos      Photo[]
    favoriteCount   Int // TODO: Make Voting Schema
    commentCount    Int // TODO: Make Comment Schema
    flavors     Flavor[]
    isEdited    Boolean
}

model User {
    uuid        String  @unique @id
    bio         String  @db.VarChar(10000) @default("") 
    firstName   String  @default("")
    lastName    String  @default("")
    userName    String  @unique
    pfpURL      String  @default("https://picsum.photos/500/500")
    location    String  @default("")
    coverURL    String  @default("https://picsum.photos/600/600")
    flavors     Flavor[]
    createdAt   DateTime @default(now())

    followers       Following[] @relation("Follower")
    following       Following[] @relation("Following")

    posts       Post[] @relation("Author")
}

model Flavor {
    id          Int         @id @default(autoincrement())
    name        String      @unique @default("")
    description String      @default("")
    color       String      @default("#fc571a")

    users       User[]
    posts       Post[]
}

model Following {
    @@id([userFollowingId, myUserId]) // user A can only follow user B at most once, so use that relationship as the id

    userFollowing    User        @relation("Follower", fields: [userFollowingId], references: [uuid])
    userFollowingId  String   
    myUser           User        @relation("Following", fields: [myUserId], references: [uuid])
    myUserId         String        
}

model Photo {
    id          Int     @id @default(autoincrement())
    photoUrl    String
    posts       Post[]
}